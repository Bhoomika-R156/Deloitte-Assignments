import java.util.Arrays;
public class StockPriceAnalyzer {
    public static int[] findNextGreaterPrices(int[] prices) {
        int[] result = new int[prices.length];
        Arrays.fill(result, -1); // Initialize the result array with -1
        findNextGreater(prices, result, prices.length - 1);
        return result;
    }
    private static void findNextGreater(int[] prices, int[] result, int index) {
        // Base case: if index is less than 0, we are done
        if (index < 0) {
            return;
        }
        // Find the next greater element for prices[index]
        int nextGreater = -1;
        for (int i = index + 1; i < prices.length; i++) {
            if (prices[i] > prices[index]) {
                nextGreater = prices[i];
                break; // We found the next greater element
            }
        }        
        // Store the next greater element in the result array
        result[index] = nextGreater;
        // Recursive call for the previous index
        findNextGreater(prices, result, index - 1);
    }
    public static void main(String[] args) {
        int[] arr1 = {6, 8, 0, 1, 3};
        int[] arr2 = {1, 3, 2, 4};
        int[] arr3 = {10, 20, 30, 50};
        int[] arr4 = {50, 40, 30, 10};
        System.out.println(Arrays.toString(findNextGreaterPrices(arr1))); // Output: [8, -1, 1, 3, -1]
        System.out.println(Arrays.toString(findNextGreaterPrices(arr2))); // Output: [3, 4, 4, -1]
        System.out.println(Arrays.toString(findNextGreaterPrices(arr3))); // Output: [20, 30, 50, -1]
        System.out.println(Arrays.toString(findNextGreaterPrices(arr4))); // Output: [-1, -1, -1, -1]
    }
}
