import java.util.*;

public class StockMarketMinPrice {
    public static List<Integer> minStockPrice(int[] prices, int k) {
        List<Integer> result = new ArrayList<>();
        Deque<Integer> deque = new LinkedList<>();
        
        for (int i = 0; i < prices.length; i++) {
            while (!deque.isEmpty() && deque.peekFirst() < i - k + 1) {
                deque.pollFirst();
            }
            
            while (!deque.isEmpty() && prices[deque.peekLast()] > prices[i]) {
                deque.pollLast();
            }
            
            deque.addLast(i);
            
            if (i >= k - 1) {
                result.add(prices[deque.peekFirst()]);
            }
        }
        
        return result;
    }
    
    public static void main(String[] args) {
        int[] prices = {120, 110, 115, 100, 105, 98, 102};
        int k = 3;
        System.out.println(minStockPrice(prices, k)); // [110, 100, 100, 98, 98]
    }
}
